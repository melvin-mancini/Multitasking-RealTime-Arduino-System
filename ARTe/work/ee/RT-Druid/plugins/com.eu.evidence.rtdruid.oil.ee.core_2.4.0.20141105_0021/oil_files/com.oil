OIL_VERSION = "2.4";

IMPLEMENTATION ee {
	MESSAGE {
		ENUM [
			SEND_STATIC_INTERNAL {
				STRING CDATATYPE;
			},
			SEND_STATIC_EXTERNAL {
				STRING CDATATYPE;
				ENUM WITH_AUTO [
					TRIGGERED,
					PENDING
				] TRANSFERPROPERTY = AUTO;
				ENUM [
					ALWAYS,
					NEVER,
					MASKEDNEWEQUALSX {
						UINT64 MASK;
						UINT64 X;
					},
					MASKEDNEWDIFFERSX {
						UINT64 MASK;
						UINT64 X;
					},
					NEWISEQUAL,
					NEWISDIFFERENT,
					MASKEDNEWEQUALSMASKEDOLD {
						UINT64 MASK;
					},
					MASKEDNEWDIFFERSMASKEDOLD {
						UINT64 MASK;
					},
					NEWISWITHIN {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISOUTSIDE {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISGREATER,
					NEWISLESSOREQUAL,
					NEWISLESS,
					NEWISGREATEROREQUAL,
					ONEEVERYN {
						UINT64 PERIOD;
						UINT64 OFFSET;
					}
				] FILTER = ALWAYS;
				STRING NETWORKORDERCALLOUT = "";
				STRING CPUORDERCALLOUT = "";
				UINT64 WITH_AUTO INITIALVALUE = AUTO;
				NETWORKMESSAGE_TYPE NETWORKMESSAGE;
			},
			SEND_DYNAMIC_EXTERNAL {
				ENUM WITH_AUTO [
					TRIGGERED,
					PENDING
				] TRANSFERPROPERTY = AUTO;
				STRING NETWORKORDERCALLOUT = "";
				STRING CPUORDERCALLOUT = "";
				UINT64 WITH_AUTO INITIALVALUE = AUTO;
				NETWORKMESSAGE_TYPE NETWORKMESSAGE;
			},
			SEND_ZERO_INTERNAL {
			},
			SEND_ZERO_EXTERNAL {
				STRING NETWORKORDERCALLOUT = "";
				STRING CPUORDERCALLOUT = "";
				NETWORKMESSAGE_TYPE NETWORKMESSAGE;
			},
			RECEIVE_ZERO_INTERNAL {
				MESSAGE_TYPE SENDINGMESSAGE;
			},
			RECEIVE_ZERO_EXTERNAL {
				STRING NETWORKORDERCALLOUT = "";
				STRING CPUORDERCALLOUT = "";
				NETWORKMESSAGE_TYPE NETWORKMESSAGE;
			},
			RECEIVE_UNQUEUED_INTERNAL {
				MESSAGE_TYPE SENDINGMESSAGE;
				ENUM [
					ALWAYS,
					NEVER,
					MASKEDNEWEQUALSX {
						UINT64 MASK;
						UINT64 X;
					},
					MASKEDNEWDIFFERSX {
						UINT64 MASK;
						UINT64 X;
					},
					NEWISEQUAL,
					NEWISDIFFERENT,
					MASKEDNEWEQUALSMASKEDOLD {
						UINT64 MASK;
					},
					MASKEDNEWDIFFERSMASKEDOLD {
						UINT64 MASK;
					},
					NEWISWITHIN {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISOUTSIDE {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISGREATER,
					NEWISLESSOREQUAL,
					NEWISLESS,
					NEWISGREATEROREQUAL,
					ONEEVERYN {
						UINT64 PERIOD;
						UINT64 OFFSET;
					}
				] FILTER = ALWAYS;
				UINT64 INITIALVALUE = 0;
			},
			RECEIVE_QUEUED_INTERNAL {
				MESSAGE_TYPE SENDINGMESSAGE;
				ENUM [
					ALWAYS,
					NEVER,
					MASKEDNEWEQUALSX {
						UINT64 MASK;
						UINT64 X;
					},
					MASKEDNEWDIFFERSX {
						UINT64 MASK;
						UINT64 X;
					},
					NEWISEQUAL,
					NEWISDIFFERENT,
					MASKEDNEWEQUALSMASKEDOLD {
						UINT64 MASK;
					},
					MASKEDNEWDIFFERSMASKEDOLD {
						UINT64 MASK;
					},
					NEWISWITHIN {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISOUTSIDE {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISGREATER,
					NEWISLESSOREQUAL,
					NEWISLESS,
					NEWISGREATEROREQUAL,
					ONEEVERYN {
						UINT64 PERIOD;
						UINT64 OFFSET;
					}
				] FILTER = ALWAYS;
				UINT64 INITIALVALUE = 0;
				UINT32 QUEUESIZE;
			},
			RECEIVE_UNQUEUED_EXTERNAL {
				STRING CDATATYPE;
				ENUM [
					ALWAYS,
					NEVER,
					MASKEDNEWEQUALSX {
						UINT64 MASK;
						UINT64 X;
					},
					MASKEDNEWDIFFERSX {
						UINT64 MASK;
						UINT64 X;
					},
					NEWISEQUAL,
					NEWISDIFFERENT,
					MASKEDNEWEQUALSMASKEDOLD {
						UINT64 MASK;
					},
					MASKEDNEWDIFFERSMASKEDOLD {
						UINT64 MASK;
					},
					NEWISWITHIN {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISOUTSIDE {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISGREATER,
					NEWISLESSOREQUAL,
					NEWISLESS,
					NEWISGREATEROREQUAL,
					ONEEVERYN {
						UINT64 PERIOD;
						UINT64 OFFSET;
					}
				] FILTER = ALWAYS;
				BOOLEAN [
					TRUE {
						MESSAGE_TYPE RECEIVEMESSAGE;
					},
					FALSE {
						STRING NETWORKORDERCALLOUT = "";
						STRING CPUORDERCALLOUT = "";
						NETWORKMESSAGE_TYPE NETWORKMESSAGE;
					}
				] LINK;
				UINT64 WITH_AUTO INITIALVALUE = AUTO;
			},
			RECEIVE_QUEUED_EXTERNAL {
				STRING CDATATYPE;
				UINT32 QUEUESIZE;
				ENUM [
					ALWAYS,
					NEVER,
					MASKEDNEWEQUALSX {
						UINT64 MASK;
						UINT64 X;
					},
					MASKEDNEWDIFFERSX {
						UINT64 MASK;
						UINT64 X;
					},
					NEWISEQUAL,
					NEWISDIFFERENT,
					MASKEDNEWEQUALSMASKEDOLD {
						UINT64 MASK;
					},
					MASKEDNEWDIFFERSMASKEDOLD {
						UINT64 MASK;
					},
					NEWISWITHIN {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISOUTSIDE {
						UINT64 MIN;
						UINT64 MAX;
					},
					NEWISGREATER,
					NEWISLESSOREQUAL,
					NEWISLESS,
					NEWISGREATEROREQUAL,
					ONEEVERYN {
						UINT64 PERIOD;
						UINT64 OFFSET;
					}
				] FILTER = ALWAYS;
				BOOLEAN [
					TRUE {
						MESSAGE_TYPE RECEIVEMESSAGE;
					},
					FALSE {
						STRING NETWORKORDERCALLOUT = "";
						STRING CPUORDERCALLOUT = "";
						NETWORKMESSAGE_TYPE NETWORKMESSAGE;
					}
				] LINK;
				UINT64 WITH_AUTO INITIALVALUE = AUTO;
			},
			RECEIVE_DYNAMIC_EXTERNAL {
				BOOLEAN [
					TRUE {
						MESSAGE_TYPE RECEIVEMESSAGE;
					},
					FALSE {
						STRING NETWORKORDERCALLOUT = "";
						STRING CPUORDERCALLOUT = "";
						NETWORKMESSAGE_TYPE NETWORKMESSAGE;
					}
				] LINK;
				UINT64 WITH_AUTO INITIALVALUE = AUTO;
			},
			RECEIVE_ZERO_SENDERS {
				STRING CDATATYPE;
				UINT64 INITIALVALUE = 0;
			}
		] MESSAGEPROPERTY;
		ENUM [
			NONE,
			ACTIVATETASK {
				TASK_TYPE TASK;
			},
			SETEVENT {
				TASK_TYPE TASK;
				EVENT_TYPE EVENT;
			},
			COMCALLBACK {
				STRING CALLBACKROUTINENAME;
				MESSAGE_TYPE MESSAGE[];
			},
			FLAG {
				STRING FLAGNAME;
			},
			INMCALLBACK {
				STRING WITH_AUTO CALLBACKROUTINENAME;
				UINT32 WITH_AUTO MONITOREDIPDU;
			}
		] NOTIFICATION = NONE;
		ENUM [
			NONE,
			ACTIVATETASK {
				TASK_TYPE TASK;
			},
			SETEVENT {
				TASK_TYPE TASK;
				EVENT_TYPE EVENT;
			},
			COMCALLBACK {
				STRING CALLBACKROUTINENAME;
				MESSAGE_TYPE MESSAGE[];
			},
			FLAG {
				STRING FLAGNAME;
			},
			INMCALLBACK {
				STRING WITH_AUTO CALLBACKROUTINENAME;
				UINT32 WITH_AUTO MONITOREDIPDU;
			}
		] NOTIFICATIONERROR = NONE;
	}; 
	NETWORKMESSAGE {
//		IPDU_TYPE IPDU;
		ENUM [
			STATIC {
				UINT32 SIZEINBITS;
				ENUM [
					LITTLEENDIAN,
					BIGENDIAN
				] BITORDERING;
				UINT32 BITPOSITION;
				ENUM [
					UNSIGNEDINTEGER,
					BYTEARRAY
				] DATAINTERPRETATION;
				UINT64 INITIALVALUE = 0;
				ENUM [
					SENT {
						ENUM WITH_AUTO [
							TRIGGERED,
							PENDING
						] TRANSFERPROPERTY = AUTO;
					},
					RECEIVE {
					}
				] DIRECTION;
			},
			DYNAMIC {
				UINT32 MAXIMUMSIZEINBITS;
				ENUM [
					LITTLEENDIAN,
					BIGENDIAN
				] BITORDERING;
				UINT32 BITPOSITION;
				UINT64 INITIALVALUE = 0;
				ENUM [
					SENT {
						ENUM WITH_AUTO [
							TRIGGERED,
							PENDING
						] TRANSFERPROPERTY = AUTO;
					},
					RECEIVE {
					}
				] DIRECTION;
			},
			ZERO {
			}
		] MESSAGEPROPERTY;
	};
	COM {
		FLOAT COMTIMEBASE = 0.001;
		BOOLEAN COMERRORHOOK = FALSE;
		BOOLEAN COMUSEGETSERVICEID = FALSE;
		BOOLEAN COMUSEPARAMETERACCESS = FALSE;
		BOOLEAN COMSTARTCOMEXTENSION = FALSE;
		STRING COMAPPMODE[];
		ENUM [
			COMSTANDARD,
			COMEXTENDED
		] COMSTATUS = COMSTANDARD;
		STRING USE [];

		STRING INCLUDES[];
		
		ENUM [
			CCCA,
			CCCB
		] COMTYPE;
		
	};
	IPDU {
		UINT32 SIZEINBITS;
		ENUM [
			SENT {
				ENUM [
					DIRECT {
						UINT64 MINIMUMDELAYTIME = 0;
					},
					PERIODIC {
						UINT64 TIMEPERIOD;
						UINT64 WITH_AUTO TIMEOFFSET = AUTO;
					},
					MIXED {
						UINT64 TIMEPERIOD;
						UINT64 WITH_AUTO TIMEOFFSET = AUTO;
						UINT64 MINIMUMDELAYTIME = 0;
					}
				] TRANSMISSIONMODE;
				UINT64 TIMEOUT = 0;
			},
			RECEIVED {
				UINT64 TIMEOUT = 0;
				UINT64 WITH_AUTO FIRSTTIMEOUT = AUTO;
			}
		] IPDUPROPERTY;
		STRING IPDUCALLOUT = "";
		STRING LAYERUSED = "";
	};
	NM {
	};
	TASK {
		MESSAGE_TYPE MESSAGE[];
	};
	ISR {
		MESSAGE_TYPE MESSAGE[];
	};
};
